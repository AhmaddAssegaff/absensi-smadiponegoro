// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  nisn            String    @unique
  name            String
  passwordHash    String
  role            Role
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  class           Class?    @relation("SiswaKelas", fields: [classId], references: [id])
  classId         String?

  homeroomFor     Class[]   @relation("WaliKelas")

  attendances     Attendance[]
}

model Class {
  id                String     @id @default(uuid())
  name              ClassName  @unique

  students          User[]     @relation("SiswaKelas")

  homeroom          User?      @relation("WaliKelas", fields: [homeroomTeacherId], references: [id])
  homeroomTeacherId String?
}

model Attendance {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime
  status    AttendanceStatus

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([userId, date])
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

enum ClassName {
  X_IPA
  X_IPS
  XI_IPA
  XI_IPS
  XII_IPA
  XII_IPS
}

enum AttendanceStatus {
  PRESENT
  SICK
  PERMIT
  ALPA
}