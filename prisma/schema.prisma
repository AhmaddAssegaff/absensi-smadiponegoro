// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  nisn            String    @unique
  name            String
  passwordHash    String
  role            Role
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  classesAsStudent Class?    @relation("SiswaKelas", fields: [classId], references: [id])
  classId         String?

  homeRoomFor     Class[]   @relation("WaliKelas")

  attendances     Attendance[]

  AttendanceSummary AttendanceSummary[]
}

model Class {
  id        String    @id @default(uuid())
  ClassName ClassName @unique

  students  User[]    @relation("SiswaKelas")

  homeroomId String?
  homeroom   User?      @relation("WaliKelas", fields: [homeroomId], references: [id])

}

model Attendance {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  dateAttandance      DateTime
  status    AttendanceStatus
  description String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([userId, dateAttandance])
}

model AttendanceSummary {
  id               String   @id @default(uuid())
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String
  classId          String?

  year             Int
  month            Int
  // yearMonth    String buat query tambah gampang

  hadirTepat       Int      @default(0)
  hadirTerlambat   Int      @default(0)
  izin             Int      @default(0)
  sakit            Int      @default(0)
  alpa             Int      @default(0)
  keluarIzin       Int      @default(0)
  keluarTanpaIzin  Int      @default(0)

  totalHadir       Int      @default(0)
  totalTidakHadir  Int      @default(0)
  totalHari        Int      @default(0)

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([userId, year, month])
}

model QRCode {
  id         String   @id @default("only")
  code       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  expiresAt  DateTime
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

enum ClassName {
  X_IPA_PUTRA
  X_IPS_PUTRI
  X_IPA_PUTRI
  X_IPS_PUTRA
  XI_IPA_PUTRA
  XI_IPS_PUTRI
  XI_IPA_PUTRI
  XI_IPS_PUTRA
  XII_IPA_PUTRA
  XII_IPS_PUTRI
  XII_IPA_PUTRI
  XII_IPS_PUTRA
}

enum AttendanceStatus {
  HADIR_TEPAT_WAKTU
  HADIR_TERLAMBAT
  IZIN_SAKIT
  IZIN
  HADIR_DAN_IZIN_SAKIT
  HADIR_DAN_IZIN_TERLAMBAT
  HADIR_DAN_KELUAR_DENGAN_IZIN
  HADIR_DAN_KELUAR_TANPA_IZIN
  ALPA
}